generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("POSTGRESQL_URL")
  // url       = env("POSTGRES_PRISMA_URL")
  // directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id         Int       @id @default(autoincrement())
  name       String
  email      String    @unique
  password   String
  is_admin   Boolean   @default(false)
  is_active  Boolean   @default(true)
  created_at DateTime? @default(now())
  is_deleted Boolean   @default(false)
}

model Employee {
  id          Int        @id @default(autoincrement())
  activity_id Int?
  group_id    Int?
  name        String
  join_date   DateTime?  @default(now())
  first_in    DateTime?  @db.Time()
  last_out    DateTime?  @db.Time()
  note        String     @default("Empty")
  timeoff     TimeOff[]
  clockins    Clock_In[]
  is_deleted  Boolean    @default(false)
  group       Group?     @relation(fields: [group_id], references: [id])
  activity    Activity?  @relation(fields: [activity_id], references: [id])
}

model Group {
  id         Int        @id @default(autoincrement())
  name       String
  color      String     @default("#606060")
  is_deleted Boolean    @default(false)
  employees  Employee[]
}

model Holiday {
  id         Int           @id @default(autoincrement())
  type_id    Int?
  name       String
  start_date DateTime?     @db.Date
  end_date   DateTime?     @db.Date
  is_deleted Boolean       @default(false)
  type       Type_Holiday? @relation(fields: [type_id], references: [id])
}

model Type_Holiday {
  id         Int       @id @default(autoincrement())
  name       String
  color      String?
  is_deleted Boolean   @default(false)
  holidays   Holiday[]
}

model Activity {
  id          Int        @id @default(autoincrement())
  project_id  Int?
  name        String
  code        String
  description String     @default("Empty")
  color       String     @default("#606060")
  is_deleted  Boolean    @default(false)
  employees   Employee[]
  project     Project?   @relation(fields: [project_id], references: [id])
}

model Project {
  id         Int           @id @default(autoincrement())
  type_id    Int?
  name       String
  code       String
  is_deleted Boolean       @default(false)
  activities Activity[]
  type       Type_Project? @relation(fields: [type_id], references: [id])
}

model Type_Project {
  id         Int       @id @default(autoincrement())
  name       String
  color      String    @default("#606060")
  is_deleted Boolean   @default(false)
  projects   Project[]
}

model TimeOff {
  id          Int           @id @default(autoincrement())
  employee_id Int
  type_id     Int
  start_date  DateTime      @db.Date
  end_date    DateTime?     @db.Date
  status      String
  note        String?       @default("Empty")
  is_deleted  Boolean       @default(false)
  employee    Employee      @relation(fields: [employee_id], references: [id])
  type        Type_TimeOff? @relation(fields: [type_id], references: [id])
}

model Type_TimeOff {
  id         Int       @id @default(autoincrement())
  name       String
  color      String?
  is_deleted Boolean   @default(false)
  timeOffs   TimeOff[]
}

model Clock_In {
  id          Int       @id @default(autoincrement())
  employee_id Int
  start_time  DateTime
  end_time    DateTime?
  date        DateTime? @default(now())
  note        String?   @default("Empty")
  is_deleted  Boolean   @default(false)
  employee    Employee  @relation(fields: [employee_id], references: [id])
}
